{"ast":null,"code":"var _jsxFileName = \"/Users/thanhtuan/Working/2023-CoderSchool/fw-tic-tac-toe/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n\n  //Declaring a Winner\n  useEffect(() => {\n    const newWinner = calculateWinner(squares);\n    setWinner(newWinner);\n  }, [squares]);\n\n  //function to check if a player has won.\n  //If a player has won, we can display text such as “Winner: X” or “Winner: O”.\n  //Input: squares: given an array of 9 squares:'X', 'O', or null.\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  //Handle player\n  const handleClick = i => {\n    const newSquares = squares.slice();\n    if (calculateWinner(newSquares) || newSquares[i]) {\n      return;\n    }\n    newSquares[i] = xIsNext ? \"X\" : \"O\";\n    setSquares(newSquares);\n    setXIsNext(prevState => !prevState);\n  };\n\n  //Restart game\n  const handlRestart = () => {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"result\",\n      children: [\"Winner is: \", winner ? winner : \"N/N\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"player\",\n        children: [\"Next player is: \", xIsNext ? \"X\" : \"O\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        squares: squares,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlRestart,\n      className: \"restart-btn\",\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"UOTo20OkPSYt5GvTmRYocifD5dQ=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","jsxDEV","_jsxDEV","Game","_s","squares","setSquares","Array","fill","xIsNext","setXIsNext","winner","setWinner","newWinner","calculateWinner","lines","i","length","a","b","c","handleClick","newSquares","slice","prevState","handlRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/thanhtuan/Working/2023-CoderSchool/fw-tic-tac-toe/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\n\nfunction Game() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n\n  //Declaring a Winner\n  useEffect(() => {\n    const newWinner = calculateWinner(squares);\n    setWinner(newWinner);\n  }, [squares]);\n\n  //function to check if a player has won.\n  //If a player has won, we can display text such as “Winner: X” or “Winner: O”.\n  //Input: squares: given an array of 9 squares:'X', 'O', or null.\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n\n  //Handle player\n  const handleClick = (i) => {\n    const newSquares = squares.slice();\n\n    if (calculateWinner(newSquares) || newSquares[i]) {\n      return;\n    }\n\n    newSquares[i] = xIsNext ? \"X\" : \"O\";\n\n    setSquares(newSquares);\n    setXIsNext((prevState) => !prevState);\n  };\n\n  //Restart game\n  const handlRestart = () => {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n  };\n\n  return (\n    <div className=\"main\">\n      <h2 className=\"result\">Winner is: {winner ? winner : \"N/N\"}</h2>\n      <div className=\"game\">\n        <span className=\"player\">Next player is: {xIsNext ? \"X\" : \"O\"}</span>\n        <Board squares={squares} handleClick={handleClick} />\n      </div>\n      <button onClick={handlRestart} className=\"restart-btn\">\n        Restart\n      </button>\n    </div>\n  );\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}